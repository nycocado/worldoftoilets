services:
    api-1:
        build:
            context: ./apps/api
            dockerfile: Dockerfile
        container_name: wot-api-1
        restart: on-failure
        environment:
            DATABASE_PORT: ${HAPROXY_PORT}
            DATABASE_NAME: ${MARIADB_DATABASE}
            DATABASE_USER: ${MARIADB_USER}
            DATABASE_PASSWORD: ${MARIADB_PASSWORD}
            JWT_SECRET: ${JWT_SECRET}
            JWT_EXPIRATION: ${JWT_EXPIRATION}
            NODE_ENV: "production"
            PORT: 3101
        volumes:
            - type: bind
              source: ./apps/api
              target: /app
            - type: volume
              source: api_1_node_modules
              target: /app/node_modules
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:3101/health || exit 1"]
            interval: 10s
            timeout: 3s
            retries: 3
            start_period: 10s
        networks:
            - wot-network

    api-2:
        build:
            context: ./apps/api
            dockerfile: Dockerfile
        container_name: wot-api-2
        restart: on-failure
        environment:
            DATABASE_PORT: ${HAPROXY_PORT}
            DATABASE_NAME: ${MARIADB_DATABASE}
            DATABASE_USER: ${MARIADB_USER}
            DATABASE_PASSWORD: ${MARIADB_PASSWORD}
            JWT_SECRET: ${JWT_SECRET}
            JWT_EXPIRATION: ${JWT_EXPIRATION}
            NODE_ENV: "production"
            PORT: 3102
        volumes:
            - type: bind
              source: ./apps/api
              target: /app
            - type: volume
              source: api_2_node_modules
              target: /app/node_modules
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:3102/health || exit 1"]
            interval: 10s
            timeout: 3s
            retries: 3
            start_period: 10s
        networks:
            - wot-network
    
    web-1:
        build:
            context: ./apps/web
            dockerfile: Dockerfile
        container_name: wot-web-1
        restart: on-failure
        environment:
            PORT: 3001
        ports:
            - "3001:3001"
        volumes:
            - type: bind
              source: ./apps/web
              target: /app
            - type: volume
              source: web_1_node_modules
              target: /app/node_modules
            - type: volume
              source: web_1_next      
              target: /app/.next
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
            interval: 10s
            timeout: 3s
            retries: 3
            start_period: 10s
        networks:
            - wot-network

    web-2:
        build:
            context: ./apps/web
            dockerfile: Dockerfile
        container_name: wot-web-2
        restart: on-failure
        environment:
            PORT: 3002
        ports:
            - "3002:3002"
        volumes:
            - type: bind
              source: ./apps/web
              target: /app
            - type: volume
              source: web_2_node_modules
              target: /app/node_modules
            - type: volume
              source: web_2_next
              target: /app/.next
        healthcheck:
            test: ["CMD-SHELL", "curl -f http://localhost:3002/health || exit 1"]
            interval: 10s
            timeout: 3s
            retries: 3
            start_period: 10s
        networks:
            - wot-network

volumes:
    api_1_node_modules:
        driver: local
    api_2_node_modules:
        driver: local
    web_1_node_modules:
        driver: local
    web_2_node_modules:
        driver: local
    web_1_next:
        driver: local
    web_2_next:
        driver: local

networks:
    wot-network:
        name: wot-network
        driver: bridge
